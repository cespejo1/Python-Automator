#OM Interface Automation Tool v1.0 by Carlos Espejo and James Barett 6.9.2016
import ctypes
import os
import openpyxl
import re
import pyperclip
from tkinter import *

os.chdir("/Users/"+os.getlogin()+"/Desktop")

root=Tk()

EnumWindows = ctypes.windll.user32.EnumWindows
EnumWindowsProc = ctypes.WINFUNCTYPE(ctypes.c_bool, ctypes.POINTER(ctypes.c_int), ctypes.POINTER(ctypes.c_int))
GetWindowText = ctypes.windll.user32.GetWindowTextW
GetWindowTextLength = ctypes.windll.user32.GetWindowTextLengthW
IsWindowVisible = ctypes.windll.user32.IsWindowVisible
titles = []

partNumRegex = re.compile(r'\d\d\d\d\d\d-\d\d\d')

variable = StringVar(root)
variable.set("Window Choices") # default value
def foreach_window(hwnd, lParam):
                if IsWindowVisible(hwnd):
                    length = GetWindowTextLength(hwnd)
                    buff = ctypes.create_unicode_buffer(length + 1)
                    if GetWindowText(hwnd, buff, length + 1) != 0 :
                        titles.append(buff.value)
                return True
                
                wb=openpyxl.load_workbook('Book1.xlsx')
                sheet=wb.get_sheet_by_name('Sheet1')
                return sheet['A1'].value


def calibrateEventOnClick():
    print ("calibrate")

def importEventOnClick():
    print ("import")
    wb=openpyxl.load_workbook('Book1.xlsx')
    sheet=wb.get_sheet_by_name('Sheet1')
    lastRow = sheet.max_row
    lastColumn = sheet.max_column
    array=[[0 for c in range(lastColumn)] for r in range(lastRow)]
    for r in range(1, lastRow+1, 1):
        for c in range(1, lastColumn+1, 1):
            if c == 1 :
                if partNumRegex.search(sheet.cell(row=r,column=c).value) is None:
                    print(sheet.cell(row=r,column=c).value+" is not a valid part number")
                    allow=messagebox.askquestion("Warning",sheet.cell(row=r,column=c).value+" is not a valid part number. \nWould you like to allow this part number anyway?", icon="warning")
                                                
                    if allow == "no":
                            print("Not Allowed")
                            sheet.cell(row=r,column=lastColumn+1).value = "Not Allowed"
                            wb.save('Book1.xlsx')
                            break
                    elif allow== "yes":
                            array[r-1][c-1]=str(sheet.cell(row=r,column=c).value)
                            print("Allowed")
                            print(array[r-1][c-1])
                            sheet.cell(row=r,column=lastColumn+1).value = "Allowed"
                            wb.save('Book1.xlsx')
                                                        
                else:
                    array[r-1][c-1]=str(sheet.cell(row=r,column=c).value)
                    print(array[r-1][c-1])
                                                
            else:
                array[r-1][c-1]=str(sheet.cell(row=r,column=c).value)
                print(array[r-1][c-1])

    pyperclip.copy(str(array[0][0]))

def pasteEventOnClick():
    print ("paste")

def quitEventOnClick():
    print ("quit")

def windowsEventOnClick():
    EnumWindows(EnumWindowsProc(foreach_window), 0)
    print(titles)
    #exit()

def ok():
    print ("value is", variable.get())
    root.quit()

#button.pack()

Button(root,text="Calibrate",command=calibrateEventOnClick).place(x=10,y=10)
Button(root,text="Import",command=importEventOnClick).place(x=10,y=40)
Button(root,text="Paste",command=pasteEventOnClick).place(x=75,y=40)
Button(root,text="Quit",command=quitEventOnClick).place(x=10,y=70)
Button(root,text="Windows",command=windowsEventOnClick).place(x=75,y=10)
Button(root, text="OK", command=ok).place(x=10, y= 160)
w = OptionMenu(root, variable, "one", "two", "three").place(x=10, y=100)
#w.pack()


root.geometry("250x250+10+10")
root.mainloop()
